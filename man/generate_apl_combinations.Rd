% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apl_transformation.R
\name{generate_apl_combinations}
\alias{generate_apl_combinations}
\title{Generate Combinations of Adstock, Power, and Lag}
\usage{
generate_apl_combinations(
  adstock_start_end_step,
  power_start_end_step,
  lag_start_end_step,
  apl_constraints = NA
)
}
\arguments{
\item{adstock_start_end_step}{A named list 'adstock' containing a named numeric
vector with 'start', 'end', and 'step' values for
the adstock rate.}

\item{power_start_end_step}{A named list 'power' containing a named numeric
vector with 'start', 'end', and 'step' values for
the power transformation.}

\item{lag_start_end_step}{A named list 'lag' containing a named numeric
vector with 'start', 'end', and 'step' values for
the lag.}

\item{apl_constraints}{A list containing additional constraints for the
combinations of adstock, power, and lag. Constraints
should be specified as character strings representing
logical conditions.}
}
\value{
A list of all valid combinations of adstock, power, and lag that
meet the specified ranges and constraints.
}
\description{
This function is designed to:
\itemize{
\item Generate a range of adstock, power, and lag values based on specified start, end, and step values.
\item Create combinations of these values.
\item Apply additional logical constraints to these combinations if specified.
}
}
\examples{
\dontrun{
  variable_apl_constraints <- list(
    TV = list(
      adstock = setNames(c(.1, .3, .1), c("start", "end", "step")),
      power = setNames(c(.2, .5, .1), c("start", "end", "step")),
      lag = setNames(c(0, 2, 1), c("start", "end", "step")),
      constraints = "adstock <= power"
    )
  )
  apl_combinations <- generate_apl_combinations(
    variable_apl_constraints$TV["adstock"],
    variable_apl_constraints$TV["power"],
    variable_apl_constraints$TV["lag"],
    variable_apl_constraints$TV["constraints"]
  )
  print(apl_combinations)
}

}
